{"version":3,"sources":["components/LoadingComponent.js","components/MenuComponent.js","components/DishdetailComponent.js","components/HomeComponent.js","components/HeaderComponent.js","components/FooterComponent.js","components/ContactComponent.js","components/AboutComponent.js","shared/baseUrl.js","redux/ActionCreators.js","redux/ActionTypes.js","components/MainComponent.js","redux/dishes.js","redux/comments.js","redux/promotions.js","redux/leaders.js","redux/forms.js","App.js","redux/configureStore.js","serviceWorker.js","index.js"],"names":["Loading","className","RenderMenuItem","dish","to","id","width","src","image","alt","name","Menu","props","menu","dishes","map","key","isLoading","errMess","active","required","val","length","maxLength","len","CommentForm","state","isModalOpen","toggleModal","bind","this","setState","values","alert","JSON","stringify","postComment","dishId","rating","comment","outline","onClick","isOpen","toggle","onSubmit","handleSubmit","htmlFor","sm","select","model","text","placeholder","validators","minLength","show","messages","textarea","rows","md","type","color","Component","RenderDish","in","transformProps","exitTransform","top","description","RenderComments","comments","author","Intl","DateTimeFormat","year","month","day","format","Date","parse","date","Dishdetail","RenderCard","item","designation","Home","dishesLoading","dishesErrMess","promotion","promoLoading","promoErrMess","leader","leaderLoading","leaderErrMess","Header","toggleNav","handleLogin","isNavOpen","event","username","value","password","remember","checked","preventDefault","dark","expand","href","height","navbar","innerRef","input","check","Footer","isNumber","isNaN","Number","validEmail","test","Contact","console","log","postFeedback","resetFeedbackForm","role","size","offset","checkbox","RenderLeader","leaders","tag","left","middle","object","body","heading","About","title","list","baseUrl","dishesFailed","errmess","payload","addDishes","commentsFailed","addComments","promosLoading","promosFailed","addPromos","promos","leadersLoading","leadersFailed","addLeaders","Main","fetchDishes","fetchComments","fetchPromos","fetchLeaders","selectedDish","location","classNames","timeout","path","component","filter","featured","dishErrMess","promotions","promo","exact","match","parseInt","params","commentsErrMess","withRouter","connect","dispatch","newComment","toISOString","fetch","method","headers","credentials","then","response","ok","error","Error","status","statusText","json","addComment","catch","message","feedback","newFeedback","actions","reset","Dishes","action","Comments","concat","Promotions","Leaders","InitialFeedback","firstname","lastname","telnum","email","agree","contactType","store","createStore","combineReducers","createForms","applyMiddleware","thunk","logger","App","Boolean","window","hostname","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.0092a679.chunk.js","sourcesContent":["import React from 'react';\n\nexport const Loading = () => {\n    return(\n        <div className=\"col-12\">\n            <span className=\"fa fa-spinner fa-pulse fa-3x fa-fw text-primary\"></span>\n            <p>Loading . . .</p>\n        </div>\n    );\n};","import React from 'react';\nimport { Card, CardImg, CardImgOverlay, CardTitle, Breadcrumb, BreadcrumbItem } from 'reactstrap';\nimport { Link } from 'react-router-dom';\nimport { Loading } from './LoadingComponent';\n\nfunction RenderMenuItem({ dish }) {\n    return (\n        <Card>\n            <Link to={`/${dish.id}`} >\n                <CardImg width=\"100%\" src={dish.image} alt={dish.name} />                <CardImgOverlay>\n                <CardTitle>{dish.name}</CardTitle>\n                </CardImgOverlay>\n            </Link>\n        </Card>\n    );\n}\nconst Menu = (props) => {\n\n    const menu = props.dishes.dishes.map((dish) => {\n        return (\n            <div className=\"col-12 col-md-5 m-1\" key={dish.id}>\n                <RenderMenuItem dish={dish} />\n            </div>\n        );\n    });\n\n    if (props.dishes.isLoading) {\n        return (\n            <div className=\"container\">\n                <div className=\"row\">\n                    <Loading />\n                </div>\n            </div>\n        );\n    }\n    else if (props.dishes.errMess) {\n        return (\n            <div className=\"container\">\n                <div className=\"row\">\n                    <div className=\"col-12\">\n                        <h4>{props.dishes.errMess}</h4>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n    else return (\n        <div className=\"container\">\n            <div className=\"row\">\n                <Breadcrumb>\n                    <BreadcrumbItem><Link to=\"/home\">Home</Link></BreadcrumbItem>\n                    <BreadcrumbItem active>Menu</BreadcrumbItem>\n                </Breadcrumb>\n                <div className=\"col-12\">\n                    <h3>Menu</h3>\n                    <hr />\n                </div>\n            </div>\n            <div className=\"row\">\n                {menu}\n            </div>\n        </div>\n    );\n}\n\nexport default Menu;","import React, { Component } from 'react';\r\nimport {\r\n    Card, CardImg, CardText, CardBody, CardTitle,\r\n    Breadcrumb, BreadcrumbItem, Modal, ModalHeader, ModalBody,\r\n    Row, Col, Label, Button\r\n} from 'reactstrap';\r\nimport { Link } from 'react-router-dom';\r\nimport { Loading } from './LoadingComponent';\r\nimport { Control, LocalForm, Errors } from 'react-redux-form';\r\nimport { FadeTransform, Fade, Stagger } from 'react-animation-components';\r\n\r\nconst required = (val) => val && val.length;\r\nconst maxLength = (len) => (val) => !(val) || (val.length <= len);\r\nconst minLength = (len) => (val) => val && (val.length >= len);\r\n\r\nclass CommentForm extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            isModalOpen: false\r\n        };\r\n        this.toggleModal = this.toggleModal.bind(this);\r\n    }\r\n\r\n    toggleModal() {\r\n        this.setState({\r\n            isModalOpen: !this.state.isModalOpen\r\n        });\r\n    }\r\n\r\n    handleSubmit(values) {\r\n        this.toggleModal();\r\n        alert(\"Comment Submitted!\" + JSON.stringify(values));\r\n        this.props.postComment(this.props.dishId, values.rating, values.name, values.comment);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <div className=\"row row-content\">\r\n                    <div className=\"col-12\">\r\n                        <Button outline onClick={this.toggleModal}>\r\n                            <span className=\"fa fa-lg fa-pencil\"> Submit Comment</span>\r\n                        </Button>\r\n                    </div>\r\n                </div>\r\n                <Modal isOpen={this.state.isModalOpen} toggle={this.toggleModal}>\r\n                    <ModalHeader toggle={this.toggleModal}>Submit Comment</ModalHeader>\r\n                    <ModalBody>\r\n                        <LocalForm onSubmit={(values) => this.handleSubmit(values)}>\r\n                            <Row className=\"form-group\">\r\n                                <Label htmlFor=\"rating\" sm={12}>Rating</Label>\r\n                                <Col sm={12}>\r\n                                    <Control.select model=\".rating\" name=\"rating\"\r\n                                        id=\"rating\"\r\n                                        className=\"form-control\">\r\n                                        <option>1</option>\r\n                                        <option>2</option>\r\n                                        <option>3</option>\r\n                                        <option>4</option>\r\n                                        <option>5</option>\r\n                                    </Control.select>\r\n                                </Col>\r\n                            </Row>\r\n                            <Row className=\"form-group\">\r\n                                <Label htmlFor=\"name\" sm={12}>Your Name</Label>\r\n                                <Col sm={12}>\r\n                                    <Control.text model=\".name\" name=\"name\"\r\n                                        placeholder=\"Your Name\"\r\n                                        id=\"name\"\r\n                                        validators={{\r\n                                            required, minLength: minLength(3), maxLength: maxLength(15)\r\n                                        }}\r\n                                        className=\"form-control\" />\r\n                                    <Errors\r\n                                        className=\"text-danger\"\r\n                                        model=\".name\"\r\n                                        show=\"touched\"\r\n                                        messages={{\r\n                                            required: 'Required',\r\n                                            minLength: 'Must be greater than 2 characters',\r\n                                            maxLength: 'Must be 15 characters or less'\r\n                                        }}\r\n                                    />\r\n                                </Col>\r\n                            </Row>\r\n                            <Row className=\"form-group\">\r\n                                <Label htmlFor=\"comment\" sm={12}>Comment</Label>\r\n                                <Col sm={12}>\r\n                                    <Control.textarea model=\".comment\" id=\"comment\"\r\n                                        rows=\"6\"\r\n                                        name=\"comment\"\r\n                                        validators={{\r\n                                            required\r\n                                        }}\r\n                                        className=\"form-control\" />\r\n                                    <Errors\r\n                                        className=\"text-danger\"\r\n                                        model=\".comment\"\r\n                                        show=\"touched\"\r\n                                        messages={{\r\n                                            required: 'Required',\r\n                                            }}\r\n                                    />\r\n                                </Col>\r\n                            </Row>\r\n                            <Row className=\"form-group\">\r\n                                <Col md={12}>\r\n                                    <Button type=\"submit\" color=\"primary\">\r\n                                        Submit\r\n                                    </Button>\r\n                                </Col>\r\n                            </Row>\r\n                        </LocalForm>\r\n                    </ModalBody>\r\n                </Modal>\r\n            </div>\r\n        );\r\n    }\r\n\r\n}\r\n\r\nfunction RenderDish({ dish }) {\r\n    if (dish != null)\r\n        return (\r\n            <FadeTransform\r\n                in\r\n                transformProps={{\r\n                    exitTransform: 'scale(0.5) translateY(-50%)'\r\n                }}>\r\n                <Card>\r\n                    <CardImg top src={dish.image} alt={dish.name} />\r\n                    <CardBody>\r\n                        <CardTitle>{dish.name}</CardTitle>\r\n                        <CardText>{dish.description}</CardText>\r\n                    </CardBody>\r\n                </Card>\r\n            </FadeTransform>\r\n        );\r\n    else\r\n        return (\r\n            <div></div>\r\n         );\r\n}\r\n\r\nfunction RenderComments({ comments, postComment, dishId }) {\r\n        if (comments) {\r\n            const comment = comments.map((comment) => {\r\n                return (\r\n                    <div className=\"container\">\r\n                        <div className=\"row\">\r\n                            <ul className=\"list-unstyled\"><Fade in><li key=\"comment.id\"><p>{comment.comment}</p>\r\n                                <p>-- {comment.author}, {new Intl.DateTimeFormat('en-US', { year: 'numeric', month: 'short', day: '2-digit' }).format(new Date(Date.parse(comment.date)))}</p></li>\r\n                                </Fade>\r\n                            </ul>\r\n                        </div>\r\n                    </div>\r\n                    );\r\n            });\r\n            return (\r\n                <div className=\"container\">\r\n                <h4>Comments</h4>\r\n                <Stagger in>\r\n                    {comment}\r\n                </Stagger>\r\n                <CommentForm dishId={dishId} postComment={postComment} />                </div>\r\n                ); \r\n        }\r\n        else {\r\n            return (<div></div>);\r\n        }\r\n    }\r\n\r\nconst Dishdetail = (props) => {\r\n    if (props.isLoading) {\r\n        return (\r\n            <div className=\"container\">\r\n                <div className=\"row\">\r\n                    <Loading />\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n    else if (props.errMess) {\r\n        return (\r\n            <div className=\"container\">\r\n                <div className=\"row\">\r\n                    <h4>{props.errMess}</h4>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n    else if (props.dish != null) {\r\n        return (\r\n            <div className=\"container\">\r\n                <div className=\"row\">\r\n                    <Breadcrumb>\r\n                    <BreadcrumbItem><Link to=\"/menu\">Menu</Link></BreadcrumbItem>\r\n                        <BreadcrumbItem active>{props.dish.name}</BreadcrumbItem>\r\n                    </Breadcrumb>\r\n                    <div className=\"col-12\">\r\n                        <h3>{props.dish.name}</h3>\r\n                        <hr />\r\n                    </div>\r\n                </div>\r\n                <div className=\"row\">\r\n                    <div className=\"col-12 col-md-5 m-2\">\r\n                        <RenderDish dish={props.dish} />\r\n                    </div>\r\n                    <div className=\"col-12 col-md-5 m-2\">\r\n                        <RenderComments comments={props.comments}\r\n                            postComment={props.postComment}\r\n                            dishId={props.dish.id}\r\n                        />\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n    else {\r\n        return (<div></div>);\r\n    }\r\n}\r\n        \r\n    \r\n\r\n\r\nexport default Dishdetail;","import React from 'react';\nimport {\r\n    Card, CardImg, CardText, CardBody,\n    CardTitle, CardSubtitle\r\n} from 'reactstrap';\nimport { Loading } from './LoadingComponent';\nimport { FadeTransform } from 'react-animation-components';\n\nfunction RenderCard({ item, isLoading, errMess }) {\n    if (isLoading) {\n        return (\n            <Loading />\n        );\n    }\n    else if (errMess) {\n        return (\n            <h4>{errMess}</h4>\n        );\n    }\n    else\n        return (\n            <FadeTransform\n                in\n                transformProps={{\n                    exitTransform: 'scale(0.5) translateY(-50%)'\n                }}>\n                <Card>\n                    <CardImg src={item.image} alt={item.name} />\n                    <CardBody>\n                        <CardTitle>{item.name}</CardTitle>\n                        {item.designation ? <CardSubtitle>{item.designation}</CardSubtitle> : null}\n                        <CardText>{item.description}</CardText>\n                    </CardBody>\n                </Card>\n            </FadeTransform>\n        );\n\n}\n\nfunction Home(props) {\n    return (\n        <div className=\"container\">\n            <div className=\"row align-items-start\">\n                <div className=\"col-12 col-md m-1\">\n                    <RenderCard item={props.dish} isLoading={props.dishesLoading} errMess={props.dishesErrMess} />\n                </div>\n                <div className=\"col-12 col-md m-1\">\n                    <RenderCard item={props.promotion} isLoading={props.promoLoading} errMess={props.promoErrMess} />\n                </div>\n                <div className=\"col-12 col-md m-1\">\n                    <RenderCard item={props.leader} isLoading={props.leaderLoading} errMess={props.leaderErrMess} />\n                </div>\n            </div>\n        </div>\n    );\n}\n\nexport default Home;","import React, { Component } from 'react';\nimport {\r\n    Nav, Navbar, NavbarBrand, NavbarToggler, Collapse,\n    NavItem, Jumbotron, Form, FormGroup, Label, Input, Button,\r\n    Modal, ModalHeader, ModalBody\r\n} from 'reactstrap';\nimport { NavLink } from 'react-router-dom';\n\nclass Header extends Component {\n\n    constructor(props) {\n        super(props);\n        this.toggleNav = this.toggleNav.bind(this);\n        this.toggleModal = this.toggleModal.bind(this);\n        this.handleLogin = this.handleLogin.bind(this);\n        this.state = {\n            isNavOpen: false,\n            isModalOpen: false\n        };\n    }\n\n    handleLogin(event) {\n        this.toggleModal();\n        alert(\"Username: \" + this.username.value + \" Password: \" + this.password.value\n            + \" Remember: \" + this.remember.checked);\n        event.preventDefault();\n\n    }\n\n    toggleModal() {\n        this.setState({\r\n            isModalOpen: !this.state.isModalOpen\r\n        });\r\n    }\n\n    toggleNav() {\n        this.setState({\n            isNavOpen: !this.state.isNavOpen\n        });\n    }\n\n    render() {\n        return (\n            <div>\n                <Navbar dark expand=\"md\">\n                    <div className=\"container\">\n                        <NavbarToggler onClick={this.toggleNav} />\n                        <NavbarBrand className=\"mr-auto\" href=\"/\"><img src='WEB2/images/logo.png' height=\"30\" width=\"41\" alt='Ristorante Con Fusion' /></NavbarBrand>\n                        <Collapse isOpen={this.state.isNavOpen} navbar>\n                            <Nav navbar>\n                                <NavItem>\n                                    <NavLink className=\"nav-link\" to='/home'><span className=\"fa fa-home fa-lg\"></span> Home</NavLink>\n                                </NavItem>\n                                <NavItem>\n                                    <NavLink className=\"nav-link\" to='/aboutus'><span className=\"fa fa-info fa-lg\"></span> About Us</NavLink>\n                                </NavItem>\n                                <NavItem>\n                                    <NavLink className=\"nav-link\" to='/menu'><span className=\"fa fa-list fa-lg\"></span> Menu</NavLink>\n                                </NavItem>\n                                <NavItem>\n                                    <NavLink className=\"nav-link\" to='/contactus'><span className=\"fa fa-address-card fa-lg\"></span> Contact Us</NavLink>\n                                </NavItem>\n                            </Nav>\n                            <Nav className=\"ml-auto\" navbar>\n                                <NavItem>\n                                    <Button outline onClick={this.toggleModal}>\n                                        <span className=\"fa fa-sign-in fa-lg\"> <strong>Login</strong></span>\n                                    </Button>\n                                </NavItem>\n                            </Nav>\n                        </Collapse>\n                    </div>\n                </Navbar>\n                <Jumbotron>\n                    <div className=\"container\">\n                        <div className=\"row row-header\">\n                            <div className=\"col-12 col-sm-6\">\n                                <h1>Ristorante con Fusion</h1>\n                                <p>We take inspiration from the World's best cuisines, and create a unique fusion experience. Our lipsmacking creations will tickle your culinary senses!</p>\n                            </div>\n                        </div>\n                    </div>\n                </Jumbotron>\n                <Modal isOpen={this.state.isModalOpen} toggle={this.toggleModal}>\n                    <ModalHeader toggle={this.toggleModal}>Login</ModalHeader>\n                    <ModalBody>\n                        <Form onSubmit={this.handleLogin}>\n                            <FormGroup>\n                                <Label htmlFor=\"username\">Username</Label>\n                                <Input type=\"text\" id=\"username\" name=\"username\"\n                                    innerRef={(input) => this.username = input} />\n                            </FormGroup>\n                            <FormGroup>\n                                <Label htmlFor=\"password\">Password</Label>\n                                <Input type=\"password\" id=\"password\" name=\"password\"\n                                    innerRef={(input) => this.password = input} />\n                            </FormGroup>\n                            <FormGroup check>\n                                <Label check>\n                                    <Input type=\"checkbox\" name=\"remember\"\n                                        innerRef={(input) => this.remember = input} />\n                                    Remember me\n                                </Label>\n                            </FormGroup>\n                            <Button type=\"submit\" value=\"submit\" color=\"primary\">Login</Button>\n                        </Form>\n                    </ModalBody>\n                </Modal>\n            </div>\n        );\n    }\n}\n\nexport default Header;","import React from 'react';\nimport { Link } from 'react-router-dom';\n\nfunction Footer(props) {\n    return (\n        <div className=\"footer\">\n            <div className=\"container\">\n                <div className=\"row justify-content-center\">\n                    <div className=\"col-4 offset-1 col-sm-2\">\n                        <h5>Links</h5>\n                        <ul className=\"list-unstyled\">\n                            <li><Link to='/home'>Home</Link></li>\n                            <li><Link to='/aboutus'>About Us</Link></li>\n                            <li><Link to='/menu'>Menu</Link></li>\n                            <li><Link to='/contactus'>Contact Us</Link></li>\n                        </ul>\n                    </div>\n                    <div className=\"col-7 col-sm-5\">\n                        <h5>Our Address</h5>\n                        <address>\n                            121, Clear Water Bay Road<br />\n\t\t              Clear Water Bay, Kowloon<br />\n\t\t              HONG KONG<br />\n                            <i className=\"fa fa-phone fa-lg\"></i>: +852 1234 5678<br />\n                            <i className=\"fa fa-fax fa-lg\"></i>: +852 8765 4321<br />\n                            <i className=\"fa fa-envelope fa-lg\"></i>: <a href=\"mailto:confusion@food.net\">\n                                confusion@food.net</a>\n                        </address>\n                    </div>\n                    <div className=\"col-12 col-sm-4 align-self-center\">\n                        <div className=\"text-center\">\n                            <a className=\"btn btn-social-icon btn-google\" href=\"http://google.com/+\"><i className=\"fa fa-google-plus\"></i></a>\n                            <a className=\"btn btn-social-icon btn-facebook\" href=\"http://www.facebook.com/profile.php?id=\"><i className=\"fa fa-facebook\"></i></a>\n                            <a className=\"btn btn-social-icon btn-linkedin\" href=\"http://www.linkedin.com/in/\"><i className=\"fa fa-linkedin\"></i></a>\n                            <a className=\"btn btn-social-icon btn-twitter\" href=\"http://twitter.com/\"><i className=\"fa fa-twitter\"></i></a>\n                            <a className=\"btn btn-social-icon btn-google\" href=\"http://youtube.com/\"><i className=\"fa fa-youtube\"></i></a>\n                            <a className=\"btn btn-social-icon\" href=\"mailto:\"><i className=\"fa fa-envelope-o\"></i></a>\n                        </div>\n                    </div>\n                </div>\n                <div className=\"row justify-content-center\">\n                    <div className=\"col-auto\">\n                        <p>� Copyright 2018 Ristorante Con Fusion</p>\n                    </div>\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default Footer;","import React, { Component } from 'react';\nimport { Breadcrumb, BreadcrumbItem, Row, Col, Label, Button } from 'reactstrap';\nimport { Link } from 'react-router-dom';\nimport { Control, Form, Errors } from 'react-redux-form';\n\nconst required = (val) => val && val.length;\nconst maxLength = (len) => (val) => !(val) || (val.length <= len);\nconst minLength = (len) => (val) => val && (val.length >= len);\nconst isNumber = (val) => !isNaN(Number(val));\nconst validEmail = (val) => /^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(val);\n\nclass Contact extends Component {\n\n    constructor(props) {\n        super(props);\r\n        this.handleSubmit = this.handleSubmit.bind(this);\r\n    }\n\n    handleSubmit(values) {\n        console.log('Current State is: ' + JSON.stringify(values));\n        this.props.postFeedback(values);\n        this.props.resetFeedbackForm();\n        // event.preventDefault();\n    }\n\n    render() {\n        return (\n            <div className=\"container\">\n                <div className=\"row\">\n                    <Breadcrumb>\n                        <BreadcrumbItem><Link to=\"/home\">Home</Link></BreadcrumbItem>\n                        <BreadcrumbItem active>Contact Us</BreadcrumbItem>\n                    </Breadcrumb>\n                    <div className=\"col-12\">\n                        <h3>Contact Us</h3>\n                        <hr />\n                    </div>\n                </div>\n                <div className=\"row row-content\">\n                    <div className=\"col-12\">\n                        <h3>Location Information</h3>\n                    </div>\n                    <div className=\"col-12 col-sm-4 offset-sm-1\">\n                        <h5>Our Address</h5>\n                        <address>\n                            121, Clear Water Bay Road<br />\n                        Clear Water Bay, Kowloon<br />\n                        HONG KONG<br />\n                            <i className=\"fa fa-phone\"></i>: +852 1234 5678<br />\n                            <i className=\"fa fa-fax\"></i>: +852 8765 4321<br />\n                            <i className=\"fa fa-envelope\"></i>: <a href=\"mailto:confusion@food.net\">confusion@food.net</a>\n                        </address>\n                    </div>\n                    <div className=\"col-12 col-sm-6 offset-sm-1\">\n                        <h5>Map of our Location</h5>\n                    </div>\n                    <div className=\"col-12 col-sm-11 offset-sm-1\">\n                        <div className=\"btn-group\" role=\"group\">\n                            <a role=\"button\" className=\"btn btn-primary\" href=\"tel:+85212345678\"><i className=\"fa fa-phone\"></i> Call</a>\n                            <a role=\"button\" className=\"btn btn-info\" href=\"/\"><i className=\"fa fa-skype\"></i> Skype</a>\n                            <a role=\"button\" className=\"btn btn-success\" href=\"mailto:confusion@food.net\"><i className=\"fa fa-envelope-o\"></i> Email</a>\n                        </div>\n                    </div>\n                </div>\n                <div className=\"row row-content\">\n                    <div className=\"col-12\">\n                        <h3>Send A Feedback</h3>\n                    </div>\n                    <div className=\"col-12 col-md-9\">\n                        <Form model=\"feedback\" onSubmit={(values) => this.handleSubmit(values)}>\n                            <Row className=\"form-group\">\n                                <Label htmlFor=\"firstname\" md={2}>First Name</Label>\n                                <Col md={10}>\n                                    <Control.text model=\".firstname\" id=\"firstname\" name=\"firstname\"\n                                        placeholder=\"First Name\"\n                                        className=\"form-control\"\n                                        validators={{\n                                            required, minLength: minLength(3), maxLength: maxLength(15)\n                                        }}\n                                    />\n                                    <Errors\n                                        className=\"text-danger\"\n                                        model=\".firstname\"\n                                        show=\"touched\"\n                                        messages={{\n                                            required: 'Required',\n                                            minLength: 'Must be greater than 2 characters',\n                                            maxLength: 'Must be 15 characters or less'\n                                        }}\n                                    />\n                                </Col>\n                            </Row>\n                            <Row className=\"form-group\">\n                                <Label htmlFor=\"lastname\" md={2}>Last Name</Label>\n                                <Col md={10}>\n                                    <Control.text model=\".lastname\" id=\"lastname\" name=\"lastname\"\n                                        placeholder=\"Last Name\"\n                                        className=\"form-control\"\n                                        validators={{\n                                            required, minLength: minLength(3), maxLength: maxLength(15)\n                                        }}\n                                    />\n                                    <Errors\n                                        className=\"text-danger\"\n                                        model=\".lastname\"\n                                        show=\"touched\"\n                                        messages={{\n                                            required: 'Required',\n                                            minLength: 'Must be greater than 2 characters',\n                                            maxLength: 'Must be 15 characters or less'\n                                        }}\n                                    />\n                                </Col>\n                            </Row>\n                            <Row className=\"form-group\">\n                                <Label htmlFor=\"telnum\" md={2}>Contact Tel.</Label>\n                                <Col md={10}>\n                                    <Control.text model=\".telnum\" id=\"telnum\" name=\"telnum\"\n                                        placeholder=\"Tel. Number\"\n                                        className=\"form-control\"\n                                        validators={{\n                                            required, minLength: minLength(3), maxLength: maxLength(15), isNumber\n                                        }}\n                                    />\n                                    <Errors\n                                        className=\"text-danger\"\n                                        model=\".telnum\"\n                                        show=\"touched\"\n                                        messages={{\n                                            required: 'Required',\n                                            minLength: 'Must be greater than 2 numbers',\n                                            maxLength: 'Must be 15 numbers or less',\n                                            isNumber: 'Must be a number'\n                                        }}\n                                    />\n                                </Col>\n                            </Row>\n                            <Row className=\"form-group\">\n                                <Label htmlFor=\"email\" md={2}>Email</Label>\n                                <Col md={10}>\n                                    <Control.text model=\".email\" id=\"email\" name=\"email\"\n                                        placeholder=\"Email\"\n                                        className=\"form-control\"\n                                        validators={{\n                                            required, validEmail\n                                        }}\n                                    />\n                                    <Errors\n                                        className=\"text-danger\"\n                                        model=\".email\"\n                                        show=\"touched\"\n                                        messages={{\n                                            required: 'Required',\n                                            validEmail: 'Invalid Email Address'\n                                        }}\n                                    />\n                                </Col>\n                            </Row>\n                            <Row className=\"form-group\">\n                                <Col md={{ size: 6, offset: 2 }}>\n                                    <div className=\"form-check\">\n                                        <Label check>\n                                            <Control.checkbox model=\".agree\" name=\"agree\"\n                                                className=\"form-check-input\"\n                                            /> {' '}\n                                            <strong>May we contact you?</strong>\n                                        </Label>\n                                    </div>\n                                </Col>\n                                <Col md={{ size: 3, offset: 1 }}>\n                                    <Control.select model=\".contactType\" name=\"contactType\"\n                                        className=\"form-control\">\n                                        <option>Tel.</option>\n                                        <option>Email</option>\n                                    </Control.select>\n                                </Col>\n                            </Row>\n                            <Row className=\"form-group\">\n                                <Label htmlFor=\"message\" md={2}>Your Feedback</Label>\n                                <Col md={10}>\n                                    <Control.textarea model=\".message\" id=\"message\" name=\"message\"\n                                        rows=\"12\"\n                                        className=\"form-control\" />\n                                </Col>\n                            </Row>\n                            <Row className=\"form-group\">\n                                <Col md={{ size: 10, offset: 2 }}>\n                                    <Button type=\"submit\" color=\"primary\">\n                                        Send Feedback\n                                    </Button>\n                                </Col>\n                            </Row>\n                        </Form>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default Contact;","import React from 'react';\r\nimport { Breadcrumb, BreadcrumbItem, Card, CardBody, CardHeader, Media } from 'reactstrap';\r\nimport { Link } from 'react-router-dom';\r\nimport { Loading } from './LoadingComponent';\r\nimport { Fade, Stagger } from 'react-animation-components';\r\n\r\nfunction RenderLeader({ leaders, isLoading, errMess }) {\r\n    if (isLoading) {\r\n        return (\r\n            <Loading />\r\n        );\r\n    }\r\n    else if (errMess) {\r\n        return (\r\n            <h4>{errMess}</h4>\r\n        );\r\n    }\r\n    else return leaders.map((leader) => {\r\n        return (\r\n            <div className=\"col-12 m-2\">\r\n                <Fade in>\r\n                    <Media tag=\"li\" key={leader.id}>\r\n                        <Media left middle>\r\n                            <Media object src={leader.image} alt={leader.name} />\r\n                        </Media>\r\n                        <Media body className=\"ml-5\">\r\n                            <Media heading>{leader.name}</Media>\r\n                            <p>{leader.designation}</p>\r\n                            <p>{leader.description}</p>\r\n                        </Media>\r\n                    </Media>\r\n                </Fade>\r\n            </div>\r\n            );\r\n    });\r\n}\r\n\r\nfunction About(props) {\r\n\r\n    return(\r\n        <div className=\"container\">\r\n            <div className=\"row\">\r\n                <Breadcrumb>\r\n                    <BreadcrumbItem><Link to=\"/home\">Home</Link></BreadcrumbItem>\r\n                    <BreadcrumbItem active>About Us</BreadcrumbItem>\r\n                </Breadcrumb>\r\n                <div className=\"col-12\">\r\n                    <h3>About Us</h3>\r\n                    <hr />\r\n                </div>                \r\n            </div>\r\n            <div className=\"row row-content\">\r\n                <div className=\"col-12 col-md-6\">\r\n                    <h2>Our History</h2>\r\n                    <p>Started in 2010, Ristorante con Fusion quickly established itself as a culinary icon par excellence in Hong Kong. With its unique brand of world fusion cuisine that can be found nowhere else, it enjoys patronage from the A-list clientele in Hong Kong.  Featuring four of the best three-star Michelin chefs in the world, you never know what will arrive on your plate the next time you visit us.</p>\r\n                    <p>The restaurant traces its humble beginnings to <em>The Frying Pan</em>, a successful chain started by our CEO, Mr. Peter Pan, that featured for the first time the world's best cuisines in a pan.</p>\r\n                </div>\r\n                <div className=\"col-12 col-md-5\">\r\n                    <Card>\r\n                        <CardHeader className=\"bg-primary text-white\">Facts At a Glance</CardHeader>\r\n                        <CardBody>\r\n                            <dl className=\"row p-1\">\r\n                                <dt className=\"col-6\">Started</dt>\r\n                                <dd className=\"col-6\">3 Feb. 2013</dd>\r\n                                <dt className=\"col-6\">Major Stake Holder</dt>\r\n                                <dd className=\"col-6\">HK Fine Foods Inc.</dd>\r\n                                <dt className=\"col-6\">Last Year's Turnover</dt>\r\n                                <dd className=\"col-6\">$1,250,375</dd>\r\n                                <dt className=\"col-6\">Employees</dt>\r\n                                <dd className=\"col-6\">40</dd>\r\n                            </dl>\r\n                        </CardBody>\r\n                    </Card>\r\n                </div>\r\n                <div className=\"col-12\">\r\n                    <Card>\r\n                        <CardBody className=\"bg-faded\">\r\n                            <blockquote className=\"blockquote\">\r\n                                <p className=\"mb-0\">You better cut the pizza in four pieces because\r\n                                    I'm not hungry enough to eat six.</p>\r\n                                <footer className=\"blockquote-footer\">Yogi Berra,\r\n                                <cite title=\"Source Title\">The Wit and Wisdom of Yogi Berra,\r\n                                    P. Pepe, Diversion Books, 2014</cite>\r\n                                </footer>\r\n                            </blockquote>\r\n                        </CardBody>\r\n                    </Card>\r\n                </div>\r\n            </div>\r\n            <div className=\"row row-content\">\r\n                <div className=\"col-12\">\r\n                    <h2>Corporate Leadership</h2>\r\n                </div>\r\n                <Media list className=\"mt-5\">\r\n                    <Stagger in>\r\n                        <RenderLeader leaders={props.leaders.leaders} isLoading={props.leaders.isLoading} errMess={props.leaders.errMess} />\r\n                    </Stagger>\r\n                </Media>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default About;    ","export const baseUrl = 'https://my-json-server.typicode.com/Tusharrastogi9897/json-server/';","import * as ActionTypes from './ActionTypes';\nimport { baseUrl } from '../shared/baseUrl';\n\nexport const addComment = (comment) => ({\n    type: ActionTypes.ADD_COMMENT,\n    payload: comment\n});\n\nexport const postFeedback = (feedback) => () => {\n\r\n    const newFeedback = feedback;\r\n    \r\n    return fetch(baseUrl + 'feedback', {\n        method: \"POST\",\n        body: JSON.stringify(newFeedback),\n        headers: {\n            \"Content-Type\": \"application/json\"\n        },\n        credentials: \"same-origin\"\n    })\n        .then(response => {\n            if (response.ok) {\n                return response;\n            } else {\n                var error = new Error('Error ' + response.status + ': ' + response.statusText);\n                error.response = response;\n                throw error;\n            }\n        },\n            error => {\n                throw error;\n            })\n        .then(response => response.json())\n        .then(response => alert(\"Thankyou For Your Feedback!\\n\" + JSON.stringify(response)))\n        .catch(error => {\r\n            alert('Your feedback could not be posted\\nError: ' + error.message);\r\n        });\r\n}\n\nexport const postComment = (dishId, rating, author, comment) => (dispatch) => {\n\n    const newComment = {\n        dishId: dishId,\n        rating: rating,\n        author: author,\n        comment: comment\n    };\n    newComment.date = new Date().toISOString();\n\n    return fetch(baseUrl + 'comments', {\n        method: \"POST\",\n        body: JSON.stringify(newComment),\n        headers: {\n            \"Content-Type\": \"application/json\"\n        },\n        credentials: \"same-origin\"\n    })\n        .then(response => {\n            if (response.ok) {\n                return response;\n            } else {\n                var error = new Error('Error ' + response.status + ': ' + response.statusText);\n                error.response = response;\n                throw error;\n            }\n        },\n            error => {\n                throw error;\n            })\n        .then(response => response.json())\n        .then(response => dispatch(addComment(response)))\n        .catch(error => { console.log('post comments', error.message); alert('Your comment could not be posted\\nError: ' + error.message); });\n};\n\nexport const fetchDishes = () => (dispatch) => {\n\n    dispatch(dishesLoading(true));\n\n    return fetch(baseUrl + 'dishes')\n        .then(response => {\n            if (response.ok) {\n                return response;\n            } else {\n                var error = new Error('Error ' + response.status + ': ' + response.statusText);\n                error.response = response;\n                throw error;\n            }\n        },\n            error => {\n                var errmess = new Error(error.message);\n                throw errmess;\n            })\n        .then(response => response.json())\n        .then(dishes => dispatch(addDishes(dishes)))\n        .catch((error) => dispatch(dishesFailed(error.message)));\n}\n\nexport const dishesLoading = () => ({\n    type: ActionTypes.DISHES_LOADING\n});\n\nexport const dishesFailed = (errmess) => ({\n    type: ActionTypes.DISHES_FAILED,\n    payload: errmess\n});\n\nexport const addDishes = (dishes) => ({\n    type: ActionTypes.ADD_DISHES,\n    payload: dishes\n});\n\nexport const fetchComments = () => (dispatch) => {\n    return fetch(baseUrl + 'comments')\n        .then(response => {\n            if (response.ok) {\n                return response;\n            } else {\n                var error = new Error('Error ' + response.status + ': ' + response.statusText);\n                error.response = response;\n                throw error;\n            }\n        },\n            error => {\n                var errmess = new Error(error.message);\n                throw errmess;\n            })\n        .then(response => response.json())\n        .then(comments => dispatch(addComments(comments)))\n        .catch((error) => dispatch(commentsFailed(error.message)));\n};\n\nexport const commentsFailed = (errmess) => ({\n    type: ActionTypes.COMMENTS_FAILED,\n    payload: errmess\n});\n\nexport const addComments = (comments) => ({\n    type: ActionTypes.ADD_COMMENTS,\n    payload: comments\n});\n\nexport const fetchPromos = () => (dispatch) => {\n\n    dispatch(promosLoading());\n\n    return fetch(baseUrl + 'promotions')\n        .then(response => {\n            if (response.ok) {\n                return response;\n            } else {\n                var error = new Error('Error ' + response.status + ': ' + response.statusText);\n                error.response = response;\n                throw error;\n            }\n        },\n            error => {\n                var errmess = new Error(error.message);\n                throw errmess;\n            })\n        .then(response => response.json())\n        .then(promos => dispatch(addPromos(promos)))\n        .catch((error) => dispatch(promosFailed(error.message)));\n}\n\nexport const fetchLeaders = () => (dispatch) => {\n\n    dispatch(leadersLoading());\n\n    return fetch(baseUrl + 'leaders')\n        .then(response => {\n            if (response.ok) {\n                return response;\n            } else {\n                var error = new Error('Error ' + response.status + ': ' + response.statusText);\n                error.response = response;\n                throw error;\n            }\n        },\n            error => {\n                var errmess = new Error(error.message);\n                throw errmess;\n            })\n        .then(response => response.json())\n        .then(leaders => dispatch(addLeaders(leaders)))\n        .catch((error) => dispatch(leadersFailed(error.message)));\n}\n\nexport const promosLoading = () => ({\n    type: ActionTypes.PROMOS_LOADING\n});\n\nexport const promosFailed = (errmess) => ({\n    type: ActionTypes.PROMOS_FAILED,\n    payload: errmess\n});\n\nexport const addPromos = (promos) => ({\n    type: ActionTypes.ADD_PROMOS,\n    payload: promos\n});\n\nexport const leadersLoading = () => ({\n    type: ActionTypes.LEADERS_LOADING\n});\n\nexport const leadersFailed = (errmess) => ({\n    type: ActionTypes.LEADERS_FAILED,\n    payload: errmess\n});\n\nexport const addLeaders = (leaders) => ({\n    type: ActionTypes.ADD_LEADERS,\n    payload: leaders\n});","export const ADD_COMMENT = 'ADD_COMMENT';\r\nexport const DISHES_LOADING = 'DISHES_LOADING';\r\nexport const DISHES_FAILED = 'DISHES_FAILED';\r\nexport const ADD_DISHES = 'ADD_DISHES';\r\nexport const ADD_COMMENTS = 'ADD_COMMENTS';\r\nexport const COMMENTS_FAILED = 'COMMENTS_FAILED';\r\nexport const PROMOS_LOADING = 'PROMOS_LOADING';\r\nexport const ADD_PROMOS = 'ADD_PROMOS';\r\nexport const PROMOS_FAILED = 'PROMOS_FAILED';\r\nexport const LEADERS_LOADING = 'LEADERS_LOADING';\r\nexport const ADD_LEADERS = 'ADD_LEADERS';\r\nexport const LEADERS_FAILED = 'LEADERS_FAILED';","import React, { Component } from 'react';\nimport Menu from './MenuComponent';\nimport Dishdetail from './DishdetailComponent';\nimport Home from './HomeComponent';\nimport Header from './HeaderComponent';\nimport Footer from './FooterComponent';\nimport Contact from './ContactComponent';\nimport About from './AboutComponent';\nimport { Route, Switch, Redirect, withRouter } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { postComment, postFeedback, fetchDishes, fetchComments, fetchPromos, fetchLeaders } from '../redux/ActionCreators';\nimport { actions } from 'react-redux-form';\nimport { TransitionGroup, CSSTransition } from 'react-transition-group';\n\nconst mapStateToProps = state => {\n    return {\r\n        dishes: state.dishes,\r\n        comments: state.comments,\r\n        leaders: state.leaders,\r\n        promotions: state.promotions\r\n    };\r\n}\n\nconst mapDispatchToProps = dispatch => ({\n    postComment: (dishId, rating, author, comment) => dispatch(postComment(dishId, rating, author, comment)),\n    postFeedback: (feedback) => dispatch(postFeedback(feedback)),\n    fetchDishes: () => { dispatch(fetchDishes()) },\n    resetFeedbackForm: () => { dispatch(actions.reset('feedback')) },\n    fetchComments: () => dispatch(fetchComments()),\n    fetchPromos: () => dispatch(fetchPromos()),\n    fetchLeaders: () => dispatch(fetchLeaders())\n});\n\nclass Main extends Component {\n\n    componentDidMount() {\n        this.props.fetchDishes();\n        this.props.fetchComments();\n        this.props.fetchPromos();\n        this.props.fetchLeaders();\n    }\n\n    onDishSelect(dishId) {\r\n        this.setState({ selectedDish: dishId });\r\n    }\n\n    render() {\n\n        const HomePage = () => {\n            return (\n                <Home\n                    dish={this.props.dishes.dishes.filter((dish) => dish.featured)[0]}\n                    dishesLoading={this.props.dishes.isLoading}\n                    dishErrMess={this.props.dishes.errMess}\n                    promotion={this.props.promotions.promotions.filter((promo) => promo.featured)[0]}\n                    promoLoading={this.props.promotions.isLoading}\n                    promoErrMess={this.props.promotions.errMess}\n                    leader={this.props.leaders.leaders.filter((leader) => leader.featured)[0]}\n                    leaderLoading={this.props.leaders.isLoading}\n                    leaderErrMess={this.props.leaders.errMess}\n                />\n            );\n        };\n\n        const DishWithId = ({ match }) => {\n            if (parseInt(match.params.dishId) <= 3) {\n                return (\n                    <Dishdetail dish={this.props.dishes.dishes.filter((dish) => dish.id === parseInt(match.params.dishId, 10))[0]}\n                        isLoading={this.props.dishes.isLoading}\n                        errMess={this.props.dishes.errMess}\n                        comments={this.props.comments.comments.filter((comment) => comment.dishId === parseInt(match.params.dishId, 10))}\n                        commentsErrMess={this.props.comments.errMess}\n                        postComment={this.props.postComment}\n                    />\n                );\r\n            }\n            else {\n                return (<Redirect to=\"/home\" />);\r\n                }\n        };\n                 \n                return (\n            <div>\n                <Header />\n                <TransitionGroup>\n                    <CSSTransition key={this.props.location.key} classNames=\"page\" timeout={300}>\n                        <Switch location={this.props.location}>\n                            <Route path='/home' component={HomePage} />\n                            <Route exact path='/aboutus' component={() => <About leaders={this.props.leaders} />} />} />\n                            <Route exact path='/menu' component={() => <Menu dishes={this.props.dishes} />} />\n                            <Route exact path='/:dishId' component={DishWithId} />\n                            <Route exact path='/contactus' component={() => <Contact resetFeedbackForm={this.props.resetFeedbackForm} postFeedback={this.props.postFeedback} />} />\n                            <Redirect to=\"/home\" />\n                        </Switch>\n                    </CSSTransition>\n                </TransitionGroup>\n                <Footer />\n            </div>\n        );\n    }\n}\n\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(Main));","import * as ActionTypes from './ActionTypes';\n\nexport const Dishes = (state = {\r\n    isLoading: true,\n    errMess: null,\n    dishes: []\r\n}, action) => {\n    switch (action.type) {\n        case ActionTypes.ADD_DISHES:\n            return { ...state, isLoading: false, errMess: null, dishes: action.payload };\n\n        case ActionTypes.DISHES_LOADING:\n            return { ...state, isLoading: true, errMess: null, dishes: [] }\n\n        case ActionTypes.DISHES_FAILED:\n            return { ...state, isLoading: false, errMess: action.payload };\n\n        default:\n            return state;\n    }\n};","import * as ActionTypes from './ActionTypes';\n\nexport const Comments = (state = { errMess: null, comments: [] }, action) => {\n    switch (action.type) {\n        case ActionTypes.ADD_COMMENTS:\n            return { ...state, errMess: null, comments: action.payload };\n\n        case ActionTypes.COMMENTS_FAILED:\n            return { ...state, errMess: action.payload };\n\n        case ActionTypes.ADD_COMMENT:\n            var comment = action.payload;\n            return { ...state, comments: state.comments.concat(comment) };\n\n        default:\n            return state;\n    }\n};","import * as ActionTypes from './ActionTypes';\n\nexport const Promotions = (state = {\r\n    isLoading: true,\n    errMess: null,\n    promotions: []\r\n}, action) => {\n    switch (action.type) {\n        case ActionTypes.ADD_PROMOS:\n            return { ...state, isLoading: false, errMess: null, promotions: action.payload };\n\n        case ActionTypes.PROMOS_LOADING:\n            return { ...state, isLoading: true, errMess: null, promotions: [] }\n\n        case ActionTypes.PROMOS_FAILED:\n            return { ...state, isLoading: false, errMess: action.payload };\n\n        default:\n            return state;\n    }\n};","import * as ActionTypes from './ActionTypes';\n\nexport const Leaders = (state = {\r\n    isLoading: true,\n    errMess: null,\n    leaders: []\r\n}, action) => {\n    switch (action.type) {\n        case ActionTypes.ADD_LEADERS:\n            return { ...state, isLoading: false, errMess: null, leaders: action.payload };\n\n        case ActionTypes.LEADERS_LOADING:\n            return { ...state, isLoading: true, errMess: null, leaders: [] }\n\n        case ActionTypes.LEADERS_FAILED:\n            return { ...state, isLoading: false, errMess: action.payload };\n\n        default:\n            return state;\n    }\n};","export const InitialFeedback = {\n    firstname: '',\n    lastname: '',\n    telnum: '',\n    email: '',\n    agree: false,\n    contactType: 'Tel.',\n    message: ''\n};","import React from 'react';\nimport './App.css';\nimport Main from './components/MainComponent';\nimport { BrowserRouter } from 'react-router-dom';\nimport { ConfigureStore } from './redux/configureStore';\nimport { Provider } from 'react-redux';\n\nconst store = ConfigureStore();\n\nfunction App() {\n\n    return (\n        <Provider store={store}>\n            <BrowserRouter>\n                <div>\n                    <Main />\n                </div>\n            </BrowserRouter>\n        </Provider>\n       );\n}\n\nexport default App;\n","import { createStore, combineReducers, applyMiddleware } from 'redux';\r\nimport { Dishes } from './dishes';\r\nimport { Comments } from './comments';\r\nimport { Promotions } from './promotions';\r\nimport { Leaders } from './leaders';\r\nimport thunk from 'redux-thunk';\r\nimport logger from 'redux-logger';\r\nimport { createForms } from 'react-redux-form';\r\nimport { InitialFeedback } from './forms';\r\n\r\nexport const ConfigureStore = () => {\r\n    const store = createStore(\r\n        combineReducers({\r\n            dishes: Dishes,\r\n            comments: Comments,\r\n            promotions: Promotions,\r\n            leaders: Leaders,\r\n            ...createForms({\r\n                feedback: InitialFeedback\r\n            })\r\n        }),\r\n        applyMiddleware(thunk, logger)\r\n    );\r\n\r\n    return store;\r\n}","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'font-awesome/css/font-awesome.css';\nimport 'bootstrap-social/bootstrap-social.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}